Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> expression SEMICOLON
Rule 2     expression -> expression PLUS term
Rule 3     expression -> term
Rule 4     term -> NUMBER

Terminals, with rules where they appear

NUMBER               : 4
PLUS                 : 2
SEMICOLON            : 1
error                : 

Nonterminals, with rules where they appear

expression           : 1 2
program              : 0
term                 : 2 3

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . expression SEMICOLON
    (2) expression -> . expression PLUS term
    (3) expression -> . term
    (4) term -> . NUMBER

    NUMBER          shift and go to state 4

    program                        shift and go to state 1
    expression                     shift and go to state 2
    term                           shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> expression . SEMICOLON
    (2) expression -> expression . PLUS term

    SEMICOLON       shift and go to state 5
    PLUS            shift and go to state 6


state 3

    (3) expression -> term .

    SEMICOLON       reduce using rule 3 (expression -> term .)
    PLUS            reduce using rule 3 (expression -> term .)


state 4

    (4) term -> NUMBER .

    SEMICOLON       reduce using rule 4 (term -> NUMBER .)
    PLUS            reduce using rule 4 (term -> NUMBER .)


state 5

    (1) program -> expression SEMICOLON .

    $end            reduce using rule 1 (program -> expression SEMICOLON .)


state 6

    (2) expression -> expression PLUS . term
    (4) term -> . NUMBER

    NUMBER          shift and go to state 4

    term                           shift and go to state 7

state 7

    (2) expression -> expression PLUS term .

    SEMICOLON       reduce using rule 2 (expression -> expression PLUS term .)
    PLUS            reduce using rule 2 (expression -> expression PLUS term .)

